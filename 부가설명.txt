1. 게임 플레이 누른 상태 중에 틸드(~) 키를 누르면 콘솔 명령어 입력 창이 나온다.
	-> diplayerall PlayController ControlRotation  :: 플레이어의 회전 값이 나타남

2. 길 찾기 시스템 : 내비 메시 바운드 볼륨
-> 배치하고 에디터의 뷰포트를 선택하고 p 키를 입력하면 내비 메시 영역이 녹색으로 뷰포트에 표시 됨

3. 블랙보드 : 블랙보드는 인공지능의 판단에 사용하는 데이터 집합을 의미. NPC의 의사결정은 블랙보드에 있는 데이터를 기반으로 진행
   비헤이비어 트리 : 블랙보드 데이터에 기반해 설계한 비헤이비어 트르의 정보를 저장한 에셋이다. 언리얼 에디터에서는 비헤이비어 트리를 시각화해 저장할 수 있도록
	              편집 기능을 제공한다.

4. 비헤이비어 트리는 태스크를 실행할 때 태스크 클래스의 ExecuteTask라는 멤버 함수를 실행한다.
    ExecuteTask 함수는 다음의 셋 중 하나의 값을 반환해야 한다.
	-> Aborted : 태스크 실행 중에 중단됐다. 결과적으로 실패
	-> Failed : 태스크를 수행했지만 실패
	-> Succeeded : 태스크를 성공적으로 수행
	-> InProgress : 태스크를 계속 수행하고 있다. 태스크 실행 결과는 향후 알려줄 예정

5. 다른 모듈을 게임 프로젝트에 추가하여 로직을 분리해 관리할 수 있음.
언리얼 에디터는 C++ 프로젝트를 생성할 때 주 게임 모듈을 자동으로 생성해주지만, 추가 모듈을
생성하는 기능은 제공하지 않는다.
-> 새로운 모듈을 추가하려면 언리얼 빌드 규칙을 이해하고, 이에 따라 폴더와 파일을 생성해야함.

- 추가 모듈 제작을 위해 필요한 요소
-> 모듈 폴더와 빌드 설정 파일 : 모듈 폴더와 모듈명으로 된 Build.cs 팡리
-> 모듈의 정의 파일 : 모듈명으로 된 .cpp 파일

=> 모듈을 Source 폴더에 복사, 비주얼 스튜디오 프로젝트를 재생성
=> ArenaBattle.Target.cs 와 ArenaBattleEditor.Target.cs 파일 정보를 수정, 다시 컴파일
=> DLL 파일이 생성됐다면 언리얼 에디터가 이 DLL파일을 로딩하도록 명령
=> uproject 파일에 새로운 모듈에 대한 정보를 기입		"PreDefault" : 다른 모듈보다 먼저 로딩
